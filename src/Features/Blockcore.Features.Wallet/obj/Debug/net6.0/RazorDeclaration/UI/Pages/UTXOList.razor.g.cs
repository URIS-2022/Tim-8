// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Blockcore.Features.Wallet.UI.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Base.Deployments;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Consensus.ScriptInfo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Features.Wallet.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Features.Wallet.Types;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using NBitcoin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Features.Wallet.Api.Controllers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Features.Wallet.Api.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Features.Wallet.Events;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Networks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.Signals;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.UI.BlazorModal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
using Blockcore.EventBus;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/UTXO/{walletname}/{accountname}")]
    public partial class UTXOList : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 106 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Wallet\UI\Pages\UTXOList.razor"
       
    [Parameter]
    public string walletname { get; set; }
    [Parameter]
    public string accountname { get; set; }
    private void NavigateToWallet(string walletName)
    {
        NavigationManager.NavigateTo("Accounts/" + walletName);
    }
    private void NavigateToWalletHistory(string walletName, string accountname)
    {
        NavigationManager.NavigateTo("WalletView/" + walletName + "/" + accountname);
    }
    private void NavigateToReceiveWallet(string walletName, string accountname)
    {
        NavigationManager.NavigateTo("walletreceive/" + walletName + "/" + accountname);
    }
    private void NavigateToSendWallet(string walletName, string accountname)
    {
        NavigationManager.NavigateTo("walletsend/" + walletName + "/" + accountname);
    }
    private SpendableTransactionsModel GetSpendableTransactions(string _walletname, string _accountname, int confirmations = 0)
    {
        IEnumerable<UnspentOutputReference> spendableTransactions = this.WalletManager.GetSpendableTransactionsInAccount(new WalletAccountReference(walletname = _walletname, accountname = _accountname), confirmations);
        var model = new SpendableTransactionsModel()
            {
                SpendableTransactions = spendableTransactions.Select(st => new SpendableTransactionModel
                {
                    Id = st.Transaction.Id,
                    Amount = st.Transaction.Amount,
                    Address = st.Address.Address,
                    Script = st.Transaction.ScriptPubKey.ToString(),
                    Index = st.Transaction.Index,
                    IsChange = st.Address.IsChangeAddress(),
                    CreationTime = st.Transaction.CreationTime,
                    Confirmations = st.Confirmations
                }).ToList()
            };
        return model;
    }

    private void ViewTransaction(TransactionItemModel _TM)
    {
        ModalService.Show("Transaction Details", typeof(Modal.ModalViewTransaction), _TM);
    }


    private void ViewSpendableTransactions(SpendableTransactionModel _TM)
    {
        ModalService.Show("Spendable Transactions Details", typeof(Modal.ModalViewSpendableTransactions), _TM);
    }
    private void OnSelected(string selection)
    {
        Console.WriteLine(selection);

    }

    List<SubscriptionToken> subscriptionTokens;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && this.Signals != null)
        {
            this.subscriptionTokens = new List<SubscriptionToken>()
        {
                this.Signals.Subscribe<TransactionFound>(this.ReloadEvent),
                this.Signals.Subscribe<TransactionSpent>(this.ReloadEvent),
            };
        }
    }

    DateTime lastRefresh = DateTime.UtcNow;

    private void ReloadEvent(object _)
    {
        if ((DateTime.UtcNow - lastRefresh).Seconds > 1)
        {
            lastRefresh = DateTime.UtcNow;

            InvokeAsync(this.StateHasChanged);
        }
    }

    public void Dispose()
    {
        if (subscriptionTokens != null)
        {
            foreach (var subscriptionToken in subscriptionTokens)
            {
                subscriptionToken.Dispose();
            }
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NodeDeployments NodeDeployments { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISignals Signals { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ModalService ModalService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Network Network { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IWalletManager WalletManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
