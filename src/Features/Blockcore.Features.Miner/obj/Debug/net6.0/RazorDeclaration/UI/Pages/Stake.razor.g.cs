// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Blockcore.Features.Miner.UI.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Miner\UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Miner\UI\Pages\Stake.razor"
using Blockcore.Features.Wallet.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Miner\UI\Pages\Stake.razor"
using Blockcore.Features.Miner;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Miner\UI\Pages\Stake.razor"
using Blockcore.Features.Miner.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Miner\UI\Pages\Stake.razor"
using Blockcore.Networks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Miner\UI\Pages\Stake.razor"
using NBitcoin;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/stake")]
    public partial class Stake : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 300 "C:\Users\PC\source\repos\50ti put URIS\src\Features\Blockcore.Features.Miner\UI\Pages\Stake.razor"
 
    string Alert { get; set; }
    private string WalletName { get; set; }
    private string Password { get; set; }
    private bool StakingEnabled { get; set; }
    private string StakingInfo { get; set; }
    private string StakingWeight { get; set; }
    private string NetworkWeight { get; set; }
    private string StakingPercent { get; set; }
    private string StakingTime { get; set; }
    protected override void OnInitialized()
    {
        this.LoadStats();
    }

    private void LoadStats()
    {
        var model = this.PosMinting.GetGetStakingInfoModel();

        this.StakingEnabled = model.Enabled;

        if (this.StakingEnabled)
        {
            decimal ourPercent = model.NetStakeWeight != 0 ? 100.0m * (decimal)model.Weight / (decimal)model.NetStakeWeight : 0;

            this.StakingInfo = $"Node staking with {new Money(model.Weight)} ({ourPercent:0.00} % of the network weight {new Money(model.NetStakeWeight)}), " +
                   $"est. time to find new block is {TimeSpan.FromSeconds(model.ExpectedTime)}.";

            this.StakingWeight = $"{new Money(model.Weight)}";
            this.NetworkWeight = $"{new Money(model.NetStakeWeight)}";
            this.StakingPercent = $"{ourPercent:0.00}";
            this.StakingTime = $"{TimeSpan.FromSeconds(model.ExpectedTime)}";
        }
        else
        {
            this.StakingInfo = string.Empty;
        }
    }

    private void SetWalletName(string walletName)
    {
        this.WalletName = walletName;
    }

    private void StopStaking()
    {
        this.MiningFeature.StopStaking();

        this.LoadStats();
    }

    private Dictionary<string, (Money AmountConfirmed, Money AmountUnconfirmed)> ReadWallets()
    {
        var walletBalances = new Dictionary<string, (Money AmountConfirmed, Money AmountUnconfirmed)>();

        foreach (var walletName in this.WalletManager.GetWalletsNames())
        {
            var items = this.WalletManager.GetSpendableTransactionsInWalletForStaking(walletName, 1);

            var amountConfirmed = items.Where(s => s.Confirmations > 0).Sum(s => s.Transaction.Amount);
            var amountUnconfirmed = items.Where(s => s.Confirmations <= 0).Sum(s => s.Transaction.Amount);

            walletBalances.Add(walletName, (Money.Satoshis(amountConfirmed), Money.Satoshis(amountUnconfirmed)));
        }

        return walletBalances;
    }

    private async Task StartStaking()
    {
        if (string.IsNullOrEmpty(this.Password)) { this.Alert = "Please enter a password"; return; }
        if (string.IsNullOrEmpty(this.WalletName)) { this.Alert = "Please enter a wallet name"; return; }

        var wallet = this.WalletManager.GetWallet(this.WalletName);

        // Check the password
        try
        {
            NBitcoin.Key.Parse(wallet.EncryptedSeed, this.Password, wallet.Network);
        }
        catch (Exception ex)
        {
            this.Alert = ex.Message;
            return;
        }

        this.MiningFeature.StartStaking(this.WalletName, this.Password);

        this.LoadStats();
        await Task.CompletedTask;
    }
    private bool IsStarting { get; set; }
    private async Task callStartStaking()
    {
        IsStarting = true;
        StateHasChanged();
        await Task.Delay(1);  // flush changes
        await StartStaking();
        IsStarting = false;
        StateHasChanged();
        await Task.Delay(1);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Network Network { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPosMinting PosMinting { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private MiningFeature MiningFeature { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IWalletManager WalletManager { get; set; }
    }
}
#pragma warning restore 1591
